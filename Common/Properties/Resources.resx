<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="down_arrow" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\left-arrow.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="right_arrow" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\right-arrow.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="TreeNodeChecked" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\checked_.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="TreeNodeUnchecked" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\unchecked.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="TypekeyNotExisted" xml:space="preserve">
    <value>请输入创建地址及名称</value>
  </data>
  <data name="CopySucess" xml:space="preserve">
    <value>复制成功 !!!</value>
  </data>
  <data name="ErrorMsg" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="WarningMsg" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="GenerateSucess" xml:space="preserve">
    <value>生成成功</value>
  </data>
  <data name="ExeAlreadyExe" xml:space="preserve">
    <value>已启动！</value>
  </data>
  <data name="ExeExeError" xml:space="preserve">
    <value>启动应用程序时出错！原因：</value>
  </data>
  <data name="DirExisted" xml:space="preserve">
    <value>目录已存在，是否覆盖??</value>
  </data>
  <data name="FileExisted" xml:space="preserve">
    <value>文件已存在是否覆盖？</value>
  </data>
  <data name="TemplateNotExisted" xml:space="preserve">
    <value>{0}/{1}模板不存在，请检查</value>
  </data>
  <data name="DirNotExisted" xml:space="preserve">
    <value>文件夹{0}不存在，请查看！！！</value>
  </data>
  <data name="CopyFailed" xml:space="preserve">
    <value>复制失败</value>
  </data>
  <data name="notNull" xml:space="preserve">
    <value>不可为空</value>
  </data>
  <data name="CreateFileName" xml:space="preserve">
    <value>Create{0}</value>
  </data>
  <data name="pkgNotNull" xml:space="preserve">
    <value>借用TypeKey不可为空</value>
  </data>
  <data name="CustomerNameNotNull" xml:space="preserve">
    <value>客户名称不可为空</value>
  </data>
  <data name="PkgDirNotExisted" xml:space="preserve">
    <value>借用目录不存在！</value>
  </data>
  <data name="ModuleNotExisted" xml:space="preserve">
    <value>未指定模块信息或模块名</value>
  </data>
  <data name="HelpDocNotExiested" xml:space="preserve">
    <value>帮助文档不存在！</value>
  </data>
  <data name="OpenDocError" xml:space="preserve">
    <value>打开Word文档出错</value>
  </data>
  <data name="ReadEntityError" xml:space="preserve">
    <value>读取实体文件时发生错误</value>
  </data>
  <data name="DllUsedMsg" xml:space="preserve">
    <value>当前DLL被占用，是否结束进程以复制？</value>
  </data>
  <data name="Start" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Start.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Stop" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Stop.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Copy" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Copy.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Refresh" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Refresh.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Copy_Client" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Copy_Client.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Start_Client" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Start_Client.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="NotFindFile" xml:space="preserve">
    <value>找不到文件{0}</value>
  </data>
  <data name="ClientRunning" xml:space="preserve">
    <value>客户端正在运行</value>
  </data>
  <data name="ServerRunning" xml:space="preserve">
    <value>服务端正在运行</value>
  </data>
  <data name="NotFind" xml:space="preserve">
    <value>没有找到</value>
  </data>
  <data name="ServerNotRunning" xml:space="preserve">
    <value>服务端未启动</value>
  </data>
</root>